name: Windows
on:
  push:
    paths-ignore:
      - 'LICENSE'
      - 'README.md'
jobs:
  ninja:
    name: Ninja
    runs-on: windows-latest
    strategy:
      matrix:
        include:
          - config: Release
          - config: Debug
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - uses: seanmiddleditch/gha-setup-vsdevenv@master
      - name: Install prerequisites
        run: |
          cinst ninja
      - name: Run CMake
        env:
          CMAKE_GENERATOR: Ninja
        run: |
          cmake -S . -B build `
            -DCMAKE_BUILD_TYPE=${{ matrix.config }} `
            -DCMAKE_INSTALL_PREFIX="${{ github.workspace }}\install" `
            -DSEIR_STATIC_RUNTIME=${{ matrix.config != 'Debug' && 'ON' || 'OFF' }} `
            -DSEIR_TESTS=ON
      - name: Build
        run: |
          cmake --build build
          cmake --build build --target install
      - name: Run tests
        run: |
          cd build
          ctest --verbose
          cd "${{ github.workspace }}"
          cmake -S cmake\SeirExample -B build.example `
            -DCMAKE_BUILD_TYPE=${{ matrix.config }} `
            -DCMAKE_PREFIX_PATH="${{ github.workspace }}\install" `
            -DSTATIC_RUNTIME=${{ matrix.config != 'Debug' && 'ON' || 'OFF' }}
          cmake --build build.example
  visual-studio:
    # This job builds the project from Visual Studio solution generated by CMake.
    # It ensures it is a valid way to build Seir.
    name: Visual Studio
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run CMake
        env:
          CMAKE_GENERATOR: Visual Studio 16 2019
          CMAKE_GENERATOR_PLATFORM: Win32
        run: |
          cmake -S . -B build `
            -DCMAKE_INSTALL_PREFIX="${{ github.workspace }}\install"
      - name: Build
        run: |
          cmake --build build --config Debug --parallel -- /nologo
          cmake --build build --config RelWithDebInfo --parallel -- /nologo
