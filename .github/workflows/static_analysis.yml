name: Static analysis
on:
  push:
    paths-ignore:
      - 'LICENSE'
      - 'README.md'
jobs:
  static-analysis:
    name: Static analysis
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/build/_SeirDownloads
          key: linux-${{ hashFiles('cmake/SeirPackages/*.cmake') }}
      - name: Install prerequisites
        run: |
          sudo apt-get update
          sudo apt-get install cppcheck libasound2-dev libfreetype-dev libjpeg-dev libvorbis-dev ninja-build
      - name: Run clang-format
        run: |
          clang-format-18 -i $(find . -type f \( -name '*.cpp' -o -name '*.hpp' \) -printf ' %p')
          git diff --color=always --exit-code --histogram
      - name: Run CMake
        env:
          CC: clang-18
          CXX: clang++-18
        run: |
          cmake -S . -B build -G Ninja \
            -DCMAKE_BUILD_TYPE=Debug \
            -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \
            -DSEIR_3RDPARTY_SKIP="freetype;jpeg;ogg;vorbis;zlib;zstd" \
            -DSEIR_AUDIO_OGGVORBIS=ON \
            -DSEIR_AUDIO_WAV=ON \
            -DSEIR_BENCHMARKS=ON \
            -DSEIR_COMPRESSION_ZLIB=ON \
            -DSEIR_COMPRESSION_ZSTD=OFF \
            -DSEIR_EXAMPLES=ON \
            -DSEIR_GUI=ON \
            -DSEIR_IMAGE_BMP=ON \
            -DSEIR_IMAGE_ICO=ON \
            -DSEIR_IMAGE_JPEG=ON \
            -DSEIR_IMAGE_TGA=ON \
            -DSEIR_RENDERER=Dummy \
            -DSEIR_SERIALIZATION=ON \
            -DSEIR_SYNTH=ON \
            -DSEIR_TESTS=ON \
            -DSEIR_U8MAIN=ON
      - name: Run cppcheck
        continue-on-error: true
        run: |
          cppcheck --enable=all --error-exitcode=1 --inline-suppr --quiet \
            --cppcheck-build-dir='${{ github.workspace }}/build-cppcheck' \
            --project='${{ github.workspace }}/build/compile_commands.json' \
            --relative-paths='${{ github.workspace }}' \
            --suppressions-list='${{ github.workspace }}/.cppcheck' \
            --template='({file}:{line}) ({severity}/{id}) {message}'
      - name: Run clang-tidy
        run: |
          find '${{ github.workspace }}/libs' -name '*.cpp' \! \( -path '*/benchmarks/*' -o -path '*/tests/*' -o -path '*/vulkan/*' -o -path '*_wasapi.cpp' -o -path '*_windows.cpp' \) \
            -printf '[%P]\n' \
            -exec clang-tidy-18 -p='${{ github.workspace }}/build' --quiet '{}' \;
