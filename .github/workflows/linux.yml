name: Linux
on:
  push:
    paths-ignore:
      - '.clang-tidy'
      - 'LICENSE'
      - 'README.md'
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - cxx: g++-10
            config: Release
          - cxx: g++-10
            config: Debug
          - cxx: clang++-12
            config: Release
          - cxx: clang++-12
            config: Debug
      fail-fast: false
    env:
      CXX: ${{ matrix.cxx }}
      CXXFLAGS: -fsanitize=address -fsanitize=undefined -fno-sanitize=nonnull-attribute
      LDFLAGS: -fsanitize=address -fsanitize=undefined
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/build/_SeirDownloads
          key: linux-${{ hashFiles('cmake/SeirPackages/*.cmake') }}
      - name: Install prerequisites
        run: |
          sudo apt-get update
          sudo apt-get install libasound2-dev libvorbis-dev ninja-build
      - name: Run CMake
        run: |
          cmake -S . -B build -G Ninja \
            -DCMAKE_BUILD_TYPE=${{ matrix.config }} \
            -DCMAKE_INSTALL_PREFIX="${{ github.workspace }}/install" \
            -DSEIR_3RDPARTY_SKIP="jpeg;vorbis;zlib;zstd" \
            -DSEIR_APP=ON \
            -DSEIR_AUDIO_AULOS=ON \
            -DSEIR_AUDIO_OGGVORBIS=ON \
            -DSEIR_AUDIO_WAV=ON \
            -DSEIR_BENCHMARKS=ON \
            -DSEIR_COMPRESSION_ZLIB=ON \
            -DSEIR_COMPRESSION_ZSTD=ON \
            -DSEIR_EXAMPLES=ON \
            -DSEIR_IMAGE_BMP=ON \
            -DSEIR_IMAGE_ICO=ON \
            -DSEIR_IMAGE_JPEG=ON \
            -DSEIR_IMAGE_TGA=ON \
            -DSEIR_TESTS=ON \
            -DSEIR_U8MAIN=ON
      - name: Build
        run: |
          cmake --build build
      - name: Run tests
        run: |
          cd build
          ASAN_OPTIONS=allocator_may_return_null=1 ctest --verbose
      - name: Check exports
        run: |
          cmake --build build --target install
          cmake -S cmake/test -B build.test -G Ninja \
            -DCMAKE_BUILD_TYPE=${{ matrix.config }} \
            -DCMAKE_PREFIX_PATH="${{ github.workspace }}/install"
          cmake --build build.test
  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    env:
      CXX: g++-10
      CXXFLAGS: --coverage
      LDFLAGS: --coverage
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/build/_SeirDownloads
          key: linux-${{ hashFiles('cmake/SeirPackages/*.cmake') }}
      - name: Install prerequisites
        run: |
          sudo apt-get update
          sudo apt-get install libasound2-dev libvorbis-dev ninja-build
      - name: Run CMake
        run: |
          cmake -S . -B build -G Ninja \
            -DCMAKE_BUILD_TYPE=Debug \
            -DSEIR_3RDPARTY_SKIP="jpeg;vorbis;zlib;zstd" \
            -DSEIR_APP=ON \
            -DSEIR_AUDIO_AULOS=ON \
            -DSEIR_AUDIO_OGGVORBIS=ON \
            -DSEIR_AUDIO_WAV=ON \
            -DSEIR_COMPRESSION_ZLIB=ON \
            -DSEIR_COMPRESSION_ZSTD=ON \
            -DSEIR_IMAGE_BMP=ON \
            -DSEIR_IMAGE_ICO=ON \
            -DSEIR_IMAGE_JPEG=ON \
            -DSEIR_IMAGE_TGA=ON \
            -DSEIR_TESTS=ON \
            -DSEIR_U8MAIN=ON
      - name: Build
        run: |
          cmake --build build
      - name: Run tests
        run: |
          cd build
          ctest --verbose
      - name: Upload coverage reports
        run: |
          pip install --user codecov
          codecov --gcov-root "${{ github.workspace }}/build" --gcov-exec gcov-10 --gcov-args "-s ${{ github.workspace }}"
